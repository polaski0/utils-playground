type ObjectType = "object"
type StringType = "string"
type NumberType = "number"

type SchemaType =
    | ObjectType
    | StringType
    | NumberType

type ObjectSchema = {
    type: ObjectType,
    properties: Record<string | number | symbol, Schema>
}

type StringSchema = {
    type: StringType,
    properties: Partial<{
        min: number,
        max: number,
    }>
}

type NumberSchema = {
    type: NumberType,
    properties: Partial<{
        min: number,
        max: number,
    }>
}

export type Schema =
    | ObjectSchema
    | StringSchema
    | NumberSchema

type Result<V> = {
    valid: boolean,
    input: V,
    errors: Error[],
}

type Error = {
    message: string,
}

const validate = <V>(schema: Schema, input: V): Result<V> => {
    const result: Result<V> = {
        valid: false,
        input: input,
        errors: []
    }

    // ...

    return result
}

export default {
    validate
}
